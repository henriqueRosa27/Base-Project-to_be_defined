{"version":3,"sources":["../../../src/app/controllers/ActivityController.js"],"names":["UserController","req","res","activities","Activity","findAll","attributes","json","params","id","Number","isInteger","status","errors","activity","findOne","where","result","schemaCreate","body","success","object","send","creation_date","Date","now","create","name","description","id_class","deadline","schemaUpdate","update","destroy"],"mappings":"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","file":"ActivityController.js","sourcesContent":["import Activity from '../models/Activity';\r\nimport validate from '../common/validate';\r\nimport schemaCreate from '../schemasValidation/Activity/create';\r\nimport schemaUpdate from '../schemasValidation/Activity/update';\r\n\r\nclass UserController {\r\n  async getAll(req, res) {\r\n    const activities = await Activity.findAll({\r\n      attributes: ['id', 'name', 'description', 'deadline'],\r\n    });\r\n    return res.json(activities);\r\n  }\r\n\r\n  async getById(req, res) {\r\n    if (!req.params.id || !Number.isInteger(req.params.id))\r\n      return res\r\n        .status(400)\r\n        .json({ errors: { errors: ['Paramêtro informado inválido'] } });\r\n\r\n    const activity = await Activity.findOne({\r\n      attributes: ['id', 'name', 'description', 'deadline'],\r\n      where: {\r\n        id: req.params.id,\r\n      },\r\n    });\r\n\r\n    if (!activity)\r\n      return res\r\n        .status(404)\r\n        .json({ errors: { errors: ['Nenhum registro encontrado'] } });\r\n\r\n    return res.json(activity);\r\n  }\r\n\r\n  async create(req, res) {\r\n    const result = await validate(schemaCreate, req.body);\r\n\r\n    if (!result.success) return res.status(400).json(result.object).send();\r\n\r\n    const { object } = result;\r\n    object.creation_date = Date.now();\r\n\r\n    const { id, name, description, id_class, deadline } = await Activity.create(\r\n      object\r\n    );\r\n\r\n    return res.json({\r\n      id,\r\n      name,\r\n      description,\r\n      id_class,\r\n      deadline,\r\n    });\r\n  }\r\n\r\n  async update(req, res) {\r\n    if (!req.params.id || !Number.isInteger(req.params.id))\r\n      return res\r\n        .status(400)\r\n        .json({ errors: { errors: ['Paramêtro informado inválido'] } });\r\n\r\n    const result = await validate(schemaUpdate, req.body);\r\n\r\n    if (!result.success) return res.status(400).json(result.object).send();\r\n\r\n    const { object } = result;\r\n    object.creation_date = Date.now();\r\n\r\n    const activity = await Activity.findOne({\r\n      attributes: ['id', 'name', 'description'],\r\n      where: {\r\n        id: req.params.id,\r\n      },\r\n    });\r\n\r\n    if (!activity)\r\n      return res\r\n        .status(404)\r\n        .json({ errors: { errors: ['Nenhum registro encontrado'] } });\r\n\r\n    activity.name = object.name;\r\n    activity.description = object.description;\r\n    activity.deadline = object.deadline;\r\n\r\n    const { id, name, description, id_class, deadline } = await activity.update(\r\n      object\r\n    );\r\n\r\n    return res.json({\r\n      id,\r\n      name,\r\n      description,\r\n      id_class,\r\n      deadline,\r\n    });\r\n  }\r\n\r\n  async delete(req, res) {\r\n    if (!req.params.id || !Number.isInteger(req.params.id))\r\n      return res\r\n        .status(400)\r\n        .json({ errors: { errors: ['Paramêtro informado inválido'] } });\r\n\r\n    const activity = await Activity.findOne({\r\n      where: {\r\n        id: req.params.id,\r\n      },\r\n      attributes: ['id']\r\n    });\r\n\r\n    if (!activity)\r\n      return res\r\n        .status(404)\r\n        .json({ errors: { errors: ['Nenhum registro encontrado'] } });\r\n\r\n    await Activity.destroy({\r\n      where: {\r\n        id: req.params.id,\r\n      },\r\n    });\r\n\r\n    return res.json();\r\n  }\r\n}\r\n\r\nexport default new UserController();\r\n"]}