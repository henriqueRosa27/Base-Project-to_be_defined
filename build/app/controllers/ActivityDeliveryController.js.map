{"version":3,"sources":["../../../src/app/controllers/ActivityDeliveryController.js"],"names":["UserController","req","res","activities","ActivityDelivery","findAll","attributes","json","params","id","Number","isInteger","status","errors","activityDelivery","findOne","where","result","schemaCreate","body","success","object","send","delivery_date","Date","now","image","file","path","id_user","userId","feedback","create","note","report","schemaSendFeedaback","id_delivery_activity","update"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEMA,c;;;;;;;iCACSC,G,EAAKC,G,EAAK;AACrB,UAAMC,aAAa,MAAMC,2BAAiBC,OAAjB,CAAyB;AAChDC,oBAAY,CACV,IADU,EAEV,MAFU,EAGV,eAHU,EAIV,QAJU,EAKV,OALU,EAMV,UANU;AADoC,OAAzB,CAAzB;AAUA,aAAOJ,IAAIK,IAAJ,CAASJ,UAAT,CAAP;AACD;;;kCAEaF,G,EAAKC,G,EAAK;AACtB,UAAI,CAACD,IAAIO,MAAJ,CAAWC,EAAZ,IAAkB,CAACC,OAAOC,SAAP,CAAiBV,IAAIO,MAAJ,CAAWC,EAA5B,CAAvB,EACE,OAAOP,IACJU,MADI,CACG,GADH,EAEJL,IAFI,CAEC,EAAEM,QAAQ,EAAEA,QAAQ,CAAC,8BAAD,CAAV,EAAV,EAFD,CAAP;;AAIF,UAAMC,mBAAmB,MAAMV,2BAAiBW,OAAjB,CAAyB;AACtDT,oBAAY,CACV,IADU,EAEV,MAFU,EAGV,eAHU,EAIV,QAJU,EAKV,OALU,EAMV,UANU,CAD0C;AAStDU,eAAO;AACLP,cAAIR,IAAIO,MAAJ,CAAWC;AADV;AAT+C,OAAzB,CAA/B;;AAcA,UAAI,CAACK,gBAAL,EACE,OAAOZ,IACJU,MADI,CACG,GADH,EAEJL,IAFI,CAEC,EAAEM,QAAQ,EAAEA,QAAQ,CAAC,4BAAD,CAAV,EAAV,EAFD,CAAP;;AAIF,aAAOX,IAAIK,IAAJ,CAASO,gBAAT,CAAP;AACD;;;iCAEYb,G,EAAKC,G,EAAK;AACrB,UAAMe,SAAS,MAAM,wBAASC,gBAAT,EAAuBjB,IAAIkB,IAA3B,CAArB;;AAEA,UAAI,CAACF,OAAOG,OAAZ,EAAqB,OAAOlB,IAAIU,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqBU,OAAOI,MAA5B,EAAoCC,IAApC,EAAP;;AAHA,UAKbD,MALa,GAKFJ,MALE,CAKbI,MALa;;AAMrBA,aAAOE,aAAP,GAAuBC,KAAKC,GAAL,EAAvB;AACAJ,aAAOK,KAAP,GAAezB,IAAI0B,IAAJ,CAASC,IAAxB;AACAP,aAAOQ,OAAP,GAAiB5B,IAAI6B,MAArB;AACAT,aAAOU,QAAP,GAAkB,IAAlB;;AATqB,iBAiBjB,MAAM3B,2BAAiB4B,MAAjB,CAAwBX,MAAxB,CAjBW;AAAA,UAYnBZ,EAZmB,QAYnBA,EAZmB;AAAA,UAanBwB,IAbmB,QAanBA,IAbmB;AAAA,UAcnBV,aAdmB,QAcnBA,aAdmB;AAAA,UAenBW,MAfmB,QAenBA,MAfmB;AAAA,UAgBnBR,KAhBmB,QAgBnBA,KAhBmB;;AAmBrB,aAAOxB,IAAIK,IAAJ,CAAS,EAAEE,MAAF,EAAMwB,UAAN,EAAYV,4BAAZ,EAA2BW,cAA3B,EAAmCR,YAAnC,EAAT,CAAP;AACD;;;uCAEkBzB,G,EAAKC,G,EAAK;AAC3B,UAAMe,SAAS,MAAM,wBAASkB,uBAAT,EAA8BlC,IAAIkB,IAAlC,CAArB;;AAEA,UAAI,CAACF,OAAOG,OAAZ,EAAqB,OAAOlB,IAAIU,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqBU,OAAOI,MAA5B,EAAoCC,IAApC,EAAP;;AAHM,UAKnBD,MALmB,GAKRJ,MALQ,CAKnBI,MALmB;AAAA,UAMnBU,QANmB,GAMgBV,MANhB,CAMnBU,QANmB;AAAA,UAMTK,oBANS,GAMgBf,MANhB,CAMTe,oBANS;;;AAQ3B,UAAMtB,mBAAmB,MAAMV,2BAAiBW,OAAjB,CAAyB;AACtDT,oBAAY,CACV,IADU,EAEV,MAFU,EAGV,eAHU,EAIV,QAJU,EAKV,OALU,EAMV,UANU,CAD0C;AAStDU,eAAO;AACLP,cAAI2B;AADC;AAT+C,OAAzB,CAA/B;;AAR2B,kBA4BvB,MAAMtB,iBAAiBuB,MAAjB,CAAwB,EAACN,kBAAD,EAAxB,CA5BiB;AAAA,UAuBzBtB,EAvByB,SAuBzBA,EAvByB;AAAA,UAwBzBwB,IAxByB,SAwBzBA,IAxByB;AAAA,UAyBzBV,aAzByB,SAyBzBA,aAzByB;AAAA,UA0BzBW,MA1ByB,SA0BzBA,MA1ByB;AAAA,UA2BzBR,KA3ByB,SA2BzBA,KA3ByB;;AA8B3B,aAAOxB,IAAIK,IAAJ,CAAS,EAAEE,MAAF,EAAMwB,UAAN,EAAYV,4BAAZ,EAA2BW,cAA3B,EAAmCR,YAAnC,EAAT,CAAP;AACD;;;;;;kBAGY,IAAI1B,cAAJ,E","file":"ActivityDeliveryController.js","sourcesContent":["import ActivityDelivery from '../models/ActivityDelivery';\r\nimport validate from '../common/validate';\r\nimport schemaCreate from '../schemasValidation/ActivityDelivery/create';\r\nimport schemaSendFeedaback from '../schemasValidation/ActivityDelivery/sendFeedaback';\r\n\r\nclass UserController {\r\n  async getAll(req, res) {\r\n    const activities = await ActivityDelivery.findAll({\r\n      attributes: [\r\n        'id',\r\n        'note',\r\n        'delivery_date',\r\n        'report',\r\n        'image',\r\n        'feedback',\r\n      ],\r\n    });\r\n    return res.json(activities);\r\n  }\r\n\r\n  async getById(req, res) {\r\n    if (!req.params.id || !Number.isInteger(req.params.id))\r\n      return res\r\n        .status(400)\r\n        .json({ errors: { errors: ['Paramêtro informado inválido'] } });\r\n\r\n    const activityDelivery = await ActivityDelivery.findOne({\r\n      attributes: [\r\n        'id',\r\n        'note',\r\n        'delivery_date',\r\n        'report',\r\n        'image',\r\n        'feedback',\r\n      ],\r\n      where: {\r\n        id: req.params.id,\r\n      },\r\n    });\r\n\r\n    if (!activityDelivery)\r\n      return res\r\n        .status(404)\r\n        .json({ errors: { errors: ['Nenhum registro encontrado'] } });\r\n\r\n    return res.json(activityDelivery);\r\n  }\r\n\r\n  async create(req, res) {\r\n    const result = await validate(schemaCreate, req.body);\r\n\r\n    if (!result.success) return res.status(400).json(result.object).send();\r\n\r\n    const { object } = result;\r\n    object.delivery_date = Date.now();\r\n    object.image = req.file.path;\r\n    object.id_user = req.userId;\r\n    object.feedback = null;\r\n\r\n    const {\r\n      id,\r\n      note,\r\n      delivery_date,\r\n      report,\r\n      image,\r\n    } = await ActivityDelivery.create(object);\r\n\r\n    return res.json({ id, note, delivery_date, report, image });\r\n  }\r\n\r\n  async sendFeedback(req, res) {\r\n    const result = await validate(schemaSendFeedaback, req.body);\r\n\r\n    if (!result.success) return res.status(400).json(result.object).send();\r\n\r\n    const { object } = result;\r\n    const { feedback, id_delivery_activity } = object;\r\n\r\n    const activityDelivery = await ActivityDelivery.findOne({\r\n      attributes: [\r\n        'id',\r\n        'note',\r\n        'delivery_date',\r\n        'report',\r\n        'image',\r\n        'feedback',\r\n      ],\r\n      where: {\r\n        id: id_delivery_activity,\r\n      },\r\n    });\r\n\r\n    const {\r\n      id,\r\n      note,\r\n      delivery_date,\r\n      report,\r\n      image,\r\n    } = await activityDelivery.update({feedback});\r\n\r\n    return res.json({ id, note, delivery_date, report, image });\r\n  }\r\n}\r\n\r\nexport default new UserController();\r\n"]}