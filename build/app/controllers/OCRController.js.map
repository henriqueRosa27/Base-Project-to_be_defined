{"version":3,"sources":["../../../src/app/controllers/OCRController.js"],"names":["OCRController","req","res","worker","load","loadLanguage","initialize","recognize","file","path","text","data","terminate","json"],"mappings":";;;;;;;;AAAA;;;;IAEMA,a;;;;;;;qCACSC,G,EAAKC,G,EAAK;AACrB,gBAAMC,SAAS,8BAAf;;AAEA,kBAAMA,OAAOC,IAAP,EAAN;AACA,kBAAMD,OAAOE,YAAP,CAAoB,KAApB,CAAN;AACA,kBAAMF,OAAOG,UAAP,CAAkB,KAAlB,CAAN;;AAEA;AACA;AACA;;AATqB,uBAYjB,MAAMH,OAAOI,SAAP,CAAiBN,IAAIO,IAAJ,CAASC,IAA1B,CAZW;AAAA,gBAWXC,IAXW,QAWnBC,IAXmB,CAWXD,IAXW;;AAcrB,kBAAMP,OAAOS,SAAP,EAAN;;AAEA,mBAAOV,IAAIW,IAAJ,CAAS,EAAEH,UAAF,EAAQF,MAAMP,IAAIO,IAAlB,EAAT,CAAP;AACD;;;;;;kBAGY,IAAIR,aAAJ,E","file":"OCRController.js","sourcesContent":["import { createWorker } from 'tesseract.js';\r\n\r\nclass OCRController {\r\n  async create(req, res) {\r\n    const worker = createWorker();\r\n\r\n    await worker.load();\r\n    await worker.loadLanguage('por');\r\n    await worker.initialize('por');\r\n\r\n    // await worker.setParameters({\r\n    //   tessedit_pageseg_mode: PSM.AUTO,\r\n    // });\r\n    const {\r\n      data: { text },\r\n    } = await worker.recognize(req.file.path);\r\n\r\n    await worker.terminate();\r\n\r\n    return res.json({ text, file: req.file });\r\n  }\r\n}\r\n\r\nexport default new OCRController();\r\n"]}