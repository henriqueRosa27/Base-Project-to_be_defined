{"version":3,"sources":["../../../src/app/controllers/ClassController.js"],"names":["ClassController","req","res","clas","Class","findAll","attributes","where","Op","or","userId","include","model","User","as","json","params","id","Number","isInteger","status","errors","findOne","code","result","schema","body","success","object","send","uniqid","time","id_teacher","creation_date","Date","now","create","name","topic","update","destroy"],"mappings":";;;;;;;;AAAA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEMA,e;;;;;;;iCACSC,G,EAAKC,G,EAAK;AACrB,UAAMC,OAAO,MAAMC,gBAAMC,OAAN,CAAc;AAC/BC,oBAAY,CAAC,IAAD,EAAO,MAAP,EAAe,OAAf,EAAwB,MAAxB,EAAgC,eAAhC,CADmB;AAE/BC,mCACGC,cAAGC,EADN,EACW,CACP,EAAE,iBAAiBR,IAAIS,MAAvB,EADO,EAEP,EAAE,gBAAgBT,IAAIS,MAAtB,EAFO,CADX,CAF+B;AAQ/BC,iBAAS,CACP;AACEC,iBAAOC,cADT;AAEEC,cAAI,SAFN;AAGER,sBAAY,CAAC,IAAD,EAAO,MAAP,EAAe,SAAf;AAHd,SADO,EAMP;AACEM,iBAAOC,cADT;AAEEC,cAAI;AAFN,SANO;AARsB,OAAd,CAAnB;AAoBA,aAAOZ,IAAIa,IAAJ,CAASZ,IAAT,CAAP;AACD;;;kCAEaF,G,EAAKC,G,EAAK;AACtB,UAAI,CAACD,IAAIe,MAAJ,CAAWC,EAAZ,IAAkB,CAACC,OAAOC,SAAP,CAAiBlB,IAAIe,MAAJ,CAAWC,EAA5B,CAAvB,EACE,OAAOf,IACJkB,MADI,CACG,GADH,EAEJL,IAFI,CAEC,EAAEM,QAAQ,EAAEA,QAAQ,CAAC,8BAAD,CAAV,EAAV,EAFD,CAAP;;AAIF,UAAMlB,OAAO,MAAMC,gBAAMkB,OAAN,CAAc;AAC/Bf;AACEU,cAAIhB,IAAIe,MAAJ,CAAWC;AADjB,WAEGT,cAAGC,EAFN,EAEW,CACP,EAAE,iBAAiBR,IAAIS,MAAvB,EADO,EAEP,EAAE,gBAAgBT,IAAIS,MAAtB,EAFO,CAFX,CAD+B;AAQ/BJ,oBAAY,CAAC,IAAD,EAAO,MAAP,EAAe,OAAf,EAAwB,MAAxB,EAAgC,eAAhC,CARmB;AAS/BK,iBAAS,CACP;AACEC,iBAAOC,cADT;AAEEC,cAAI;AAFN,SADO,EAKP;AACEF,iBAAOC,cADT;AAEEC,cAAI;AAFN,SALO;AATsB,OAAd,CAAnB;;AAqBA,UAAI,CAACX,IAAL,EACE,OAAOD,IACJkB,MADI,CACG,GADH,EAEJL,IAFI,CAEC,EAAEM,QAAQ,EAAEA,QAAQ,CAAC,4BAAD,CAAV,EAAV,EAFD,CAAP;;AAIF,aAAOnB,IAAIa,IAAJ,CAASZ,IAAT,CAAP;AACD;;;oCAEeF,G,EAAKC,G,EAAK;AACxB,UAAI,CAACD,IAAIe,MAAJ,CAAWO,IAAhB,EACE,OAAOrB,IACJkB,MADI,CACG,GADH,EAEJL,IAFI,CAEC,EAAEM,QAAQ,EAAEA,QAAQ,CAAC,8BAAD,CAAV,EAAV,EAFD,CAAP;;AAIF,UAAMlB,OAAO,MAAMC,gBAAMkB,OAAN,CAAc;AAC/Bf,eAAO;AACLgB,gBAAMtB,IAAIe,MAAJ,CAAWO;AADZ,SADwB;AAI/BjB,oBAAY,CAAC,IAAD,EAAO,MAAP,EAAe,OAAf,EAAwB,MAAxB,EAAgC,eAAhC,CAJmB;AAK/BK,iBAAS,CACP;AACEC,iBAAOC,cADT;AAEEC,cAAI;AAFN,SADO,EAKP;AACEF,iBAAOC,cADT;AAEEC,cAAI;AAFN,SALO;AALsB,OAAd,CAAnB;;AAiBA,UAAI,CAACX,IAAL,EACE,OAAOD,IACJkB,MADI,CACG,GADH,EAEJL,IAFI,CAEC,EAAEM,QAAQ,EAAEA,QAAQ,CAAC,4BAAD,CAAV,EAAV,EAFD,CAAP;;AAIF,aAAOnB,IAAIa,IAAJ,CAASZ,IAAT,CAAP;AACD;;;iCAEYF,G,EAAKC,G,EAAK;AACrB,UAAMsB,SAAS,MAAM,wBAASC,eAAT,EAAiBxB,IAAIyB,IAArB,CAArB;;AAEA,UAAI,CAACF,OAAOG,OAAZ,EAAqB,OAAOzB,IAAIkB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqBS,OAAOI,MAA5B,EAAoCC,IAApC,EAAP;;AAHA,UAKbD,MALa,GAKFJ,MALE,CAKbI,MALa;;AAMrBA,aAAOL,IAAP,GAAcO,iBAAOC,IAAP,EAAd;AACAH,aAAOI,UAAP,GAAoB/B,IAAIS,MAAxB;AACAkB,aAAOK,aAAP,GAAuBC,KAAKC,GAAL,EAAvB;;AARqB,iBAU4B,MAAM/B,gBAAMgC,MAAN,CAAaR,MAAb,CAVlC;AAAA,UAUbX,EAVa,QAUbA,EAVa;AAAA,UAUToB,IAVS,QAUTA,IAVS;AAAA,UAUHC,KAVG,QAUHA,KAVG;AAAA,UAUIf,IAVJ,QAUIA,IAVJ;AAAA,UAUUU,aAVV,QAUUA,aAVV;;AAYrB,aAAO/B,IAAIa,IAAJ,CAAS;AACdE,cADc;AAEdoB,kBAFc;AAGdC,oBAHc;AAIdf,kBAJc;AAKdU;AALc,OAAT,CAAP;AAOD;;;iCAEYhC,G,EAAKC,G,EAAK;AACrB,UAAI,CAACD,IAAIe,MAAJ,CAAWC,EAAZ,IAAkB,CAACC,OAAOC,SAAP,CAAiBlB,IAAIe,MAAJ,CAAWC,EAA5B,CAAvB,EACE,OAAOf,IACJkB,MADI,CACG,GADH,EAEJL,IAFI,CAEC,EAAEM,QAAQ,EAAEA,QAAQ,CAAC,8BAAD,CAAV,EAAV,EAFD,CAAP;;AAIF,UAAMG,SAAS,MAAM,wBAASC,eAAT,EAAiBxB,IAAIyB,IAArB,CAArB;;AAEA,UAAI,CAACF,OAAOG,OAAZ,EAAqB,OAAOzB,IAAIkB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqBS,OAAOI,MAA5B,EAAoCC,IAApC,EAAP;;AARA,UAUbD,MAVa,GAUFJ,MAVE,CAUbI,MAVa;;;AAYrB,UAAMzB,OAAO,MAAMC,gBAAMkB,OAAN,CAAc;AAC/Bf,eAAO;AACLU,cAAIhB,IAAIe,MAAJ,CAAWC;AADV;AADwB,OAAd,CAAnB;;AAMA,UAAI,CAACd,IAAL,EACE,OAAOD,IACJkB,MADI,CACG,GADH,EAEJL,IAFI,CAEC,EAAEM,QAAQ,EAAEA,QAAQ,CAAC,4BAAD,CAAV,EAAV,EAFD,CAAP;;AAnBmB,kBAuB4B,MAAMlB,KAAKoC,MAAL,CAAYX,MAAZ,CAvBlC;AAAA,UAuBbX,EAvBa,SAuBbA,EAvBa;AAAA,UAuBToB,IAvBS,SAuBTA,IAvBS;AAAA,UAuBHC,KAvBG,SAuBHA,KAvBG;AAAA,UAuBIf,IAvBJ,SAuBIA,IAvBJ;AAAA,UAuBUU,aAvBV,SAuBUA,aAvBV;;AAyBrB,aAAO/B,IAAIa,IAAJ,CAAS;AACdE,cADc;AAEdoB,kBAFc;AAGdC,oBAHc;AAIdf,kBAJc;AAKdU;AALc,OAAT,CAAP;AAOD;;;kCAEYhC,G,EAAKC,G,EAAK;AACrB,UAAI,CAACD,IAAIe,MAAJ,CAAWC,EAAZ,IAAkB,CAACC,OAAOC,SAAP,CAAiBlB,IAAIe,MAAJ,CAAWC,EAA5B,CAAvB,EACE,OAAOf,IACJkB,MADI,CACG,GADH,EAEJL,IAFI,CAEC,EAAEM,QAAQ,EAAEA,QAAQ,CAAC,8BAAD,CAAV,EAAV,EAFD,CAAP;;AAIF,UAAMlB,OAAO,MAAMC,gBAAMkB,OAAN,CAAc;AAC/Bf,eAAO;AACLU,cAAIhB,IAAIe,MAAJ,CAAWC;AADV;AADwB,OAAd,CAAnB;;AAMA,UAAI,CAACd,IAAL,EACE,OAAOD,IACJkB,MADI,CACG,GADH,EAEJL,IAFI,CAEC,EAAEM,QAAQ,EAAEA,QAAQ,CAAC,4BAAD,CAAV,EAAV,EAFD,CAAP;;AAIF,YAAMjB,gBAAMoC,OAAN,CAAc;AAClBjC,eAAO;AACLU,cAAIhB,IAAIe,MAAJ,CAAWC;AADV;AADW,OAAd,CAAN;;AAMA,aAAOf,IAAIa,IAAJ,EAAP;AACD;;;;;;kBAGY,IAAIf,eAAJ,E","file":"ClassController.js","sourcesContent":["import uniqid from 'uniqid';\r\nimport { Op } from 'sequelize';\r\n\r\nimport Class from '../models/Class';\r\nimport User from '../models/User';\r\nimport validate from '../common/validate';\r\nimport schema from '../schemasValidation/class';\r\n\r\nclass ClassController {\r\n  async getAll(req, res) {\r\n    const clas = await Class.findAll({\r\n      attributes: ['id', 'name', 'topic', 'code', 'creation_date'],\r\n      where: {\r\n        [Op.or]: [\r\n          { '$students.id$': req.userId },\r\n          { '$teacher.id$': req.userId },\r\n        ],\r\n      },\r\n      include: [\r\n        {\r\n          model: User,\r\n          as: 'teacher',\r\n          attributes: ['id', 'name', 'surname'],\r\n        },\r\n        {\r\n          model: User,\r\n          as: 'students',\r\n        },\r\n      ],\r\n    });\r\n    return res.json(clas);\r\n  }\r\n\r\n  async getById(req, res) {\r\n    if (!req.params.id || !Number.isInteger(req.params.id))\r\n      return res\r\n        .status(400)\r\n        .json({ errors: { errors: ['Paramêtro informado inválido'] } });\r\n\r\n    const clas = await Class.findOne({\r\n      where: {\r\n        id: req.params.id,\r\n        [Op.or]: [\r\n          { '$students.id$': req.userId },\r\n          { '$teacher.id$': req.userId },\r\n        ],\r\n      },\r\n      attributes: ['id', 'name', 'topic', 'code', 'creation_date'],\r\n      include: [\r\n        {\r\n          model: User,\r\n          as: 'students',\r\n        },\r\n        {\r\n          model: User,\r\n          as: 'teacher',\r\n        },\r\n      ],\r\n    });\r\n\r\n    if (!clas)\r\n      return res\r\n        .status(404)\r\n        .json({ errors: { errors: ['Nenhum registro encontrado'] } });\r\n\r\n    return res.json(clas);\r\n  }\r\n\r\n  async getByCode(req, res) {\r\n    if (!req.params.code)\r\n      return res\r\n        .status(400)\r\n        .json({ errors: { errors: ['Paramêtro informado inválido'] } });\r\n\r\n    const clas = await Class.findOne({\r\n      where: {\r\n        code: req.params.code,\r\n      },\r\n      attributes: ['id', 'name', 'topic', 'code', 'creation_date'],\r\n      include: [\r\n        {\r\n          model: User,\r\n          as: 'students',\r\n        },\r\n        {\r\n          model: User,\r\n          as: 'teacher',\r\n        },\r\n      ],\r\n    });\r\n\r\n    if (!clas)\r\n      return res\r\n        .status(404)\r\n        .json({ errors: { errors: ['Nenhum registro encontrado'] } });\r\n\r\n    return res.json(clas);\r\n  }\r\n\r\n  async create(req, res) {\r\n    const result = await validate(schema, req.body);\r\n\r\n    if (!result.success) return res.status(400).json(result.object).send();\r\n\r\n    const { object } = result;\r\n    object.code = uniqid.time();\r\n    object.id_teacher = req.userId;\r\n    object.creation_date = Date.now();\r\n\r\n    const { id, name, topic, code, creation_date } = await Class.create(object);\r\n\r\n    return res.json({\r\n      id,\r\n      name,\r\n      topic,\r\n      code,\r\n      creation_date,\r\n    });\r\n  }\r\n\r\n  async update(req, res) {\r\n    if (!req.params.id || !Number.isInteger(req.params.id))\r\n      return res\r\n        .status(400)\r\n        .json({ errors: { errors: ['Paramêtro informado inválido'] } });\r\n\r\n    const result = await validate(schema, req.body);\r\n\r\n    if (!result.success) return res.status(400).json(result.object).send();\r\n\r\n    const { object } = result;\r\n\r\n    const clas = await Class.findOne({\r\n      where: {\r\n        id: req.params.id,\r\n      },\r\n    });\r\n\r\n    if (!clas)\r\n      return res\r\n        .status(404)\r\n        .json({ errors: { errors: ['Nenhum registro encontrado'] } });\r\n\r\n    const { id, name, topic, code, creation_date } = await clas.update(object);\r\n\r\n    return res.json({\r\n      id,\r\n      name,\r\n      topic,\r\n      code,\r\n      creation_date,\r\n    });\r\n  }\r\n\r\n  async delete(req, res) {\r\n    if (!req.params.id || !Number.isInteger(req.params.id))\r\n      return res\r\n        .status(400)\r\n        .json({ errors: { errors: ['Paramêtro informado inválido'] } });\r\n\r\n    const clas = await Class.findOne({\r\n      where: {\r\n        id: req.params.id,\r\n      },\r\n    });\r\n\r\n    if (!clas)\r\n      return res\r\n        .status(404)\r\n        .json({ errors: { errors: ['Nenhum registro encontrado'] } });\r\n\r\n    await Class.destroy({\r\n      where: {\r\n        id: req.params.id,\r\n      },\r\n    });\r\n\r\n    return res.json();\r\n  }\r\n}\r\n\r\nexport default new ClassController();\r\n"]}