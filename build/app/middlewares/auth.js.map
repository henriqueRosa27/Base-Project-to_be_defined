{"version":3,"sources":["../../../src/app/middlewares/auth.js"],"names":["req","res","next","authHeader","headers","authorization","console","log","status","json","error","split","token","decoded","jwt","verify","authConfig","secret","userId","user","id","err"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;;;kBAEe,gBAAOA,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AACvC,MAAMC,aAAaH,IAAII,OAAJ,CAAYC,aAA/B;AACAC,UAAQC,GAAR,CAAYJ,UAAZ;;AAEA,MAAI,CAACA,UAAL,EAAiB;AACf,WAAOF,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,qBAAT,EAArB,CAAP;AACD;;AANsC,0BAQrBP,WAAWQ,KAAX,CAAiB,GAAjB,CARqB;AAAA;AAAA,MAQ9BC,KAR8B;;AAUvC,MAAI;AACF,QAAMC,UAAU,MAAM,qBAAUC,uBAAIC,MAAd,EAAsBH,KAAtB,EAA6BI,eAAWC,MAAxC,CAAtB;;AAEAjB,QAAIkB,MAAJ,GAAaL,QAAQM,IAAR,CAAaC,EAA1B;;AAEA,WAAOlB,MAAP;AACD,GAND,CAME,OAAOmB,GAAP,EAAY;AACZ,WAAOpB,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,gBAAT,EAArB,CAAP;AACD;AACF,C","file":"auth.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport { promisify } from 'util';\r\nimport authConfig from '../../config/auth';\r\n\r\nexport default async (req, res, next) => {\r\n  const authHeader = req.headers.authorization;\r\n  console.log(authHeader);\r\n\r\n  if (!authHeader) {\r\n    return res.status(401).json({ error: 'Token not provided!' });\r\n  }\r\n\r\n  const [, token] = authHeader.split(' ');\r\n\r\n  try {\r\n    const decoded = await promisify(jwt.verify)(token, authConfig.secret);\r\n\r\n    req.userId = decoded.user.id;\r\n\r\n    return next();\r\n  } catch (err) {\r\n    return res.status(401).json({ error: 'Token invalid!' });\r\n  }\r\n};\r\n"]}