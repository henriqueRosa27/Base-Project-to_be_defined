{"version":3,"sources":["../../../src/app/schemasValidation/user.js"],"names":["Yup","schema","object","shape","name","string","required","surname","email","test","value","user","User","findOne","where","attributes","password","min","max","confirmPassword","oneOf","ref"],"mappings":";;;;;;AAAA;;IAAYA,G;;AAEZ;;;;;;;;AAEA,IAAMC,SAASD,IAAIE,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,QAAMJ,IAAIK,MAAJ,CAAW,eAAX,EAA4BC,QAA5B,CAAqC,mBAArC,CAD0B;AAEhCC,WAASP,IAAIK,MAAJ,CAAW,gBAAX,EAA6BC,QAA7B,CAAsC,mBAAtC,CAFuB;AAGhCE,SAAOR,IAAIK,MAAJ,CAAW,eAAX,EACJC,QADI,CACK,mBADL,EAEJE,KAFI,CAEE,gBAFF,EAGJC,IAHI,CAGC,QAHD,EAGW,qBAHX,EAGkC,gBAAOC,KAAP,EAAiB;AACtD,QAAIA,KAAJ,EAAW;AACT,UAAMC,OAAO,MAAMC,eAAKC,OAAL,CAAa;AAC9BC,eAAO,EAAEN,OAAOE,KAAT,EADuB;AAE9BK,oBAAY,CAAC,IAAD;AAFkB,OAAb,CAAnB;AAIA,aAAOJ,SAAS,IAAhB;AACD;AACD,WAAO,IAAP;AACD,GAZI,CAHyB;AAgBhCK,YAAUhB,IAAIK,MAAJ,CAAW,eAAX,EACPC,QADO,CACE,mBADF,EAEPW,GAFO,CAEH,CAFG,EAEA,wCAFA,EAGPC,GAHO,CAGH,EAHG,EAGC,wCAHD,CAhBsB;AAoBhCC,mBAAiBnB,IAAIK,MAAJ,CAAW,eAAX,EACdC,QADc,CACL,mBADK,EAEdW,GAFc,CAEV,CAFU,EAEP,wCAFO,EAGdC,GAHc,CAGV,EAHU,EAGN,wCAHM,EAIdE,KAJc,CAIR,CAACpB,IAAIqB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAJQ,EAIqB,kBAJrB;AApBe,CAAnB,CAAf;;kBA2BepB,M","file":"user.js","sourcesContent":["import * as Yup from 'yup';\r\n\r\nimport User from '../models/User';\r\n\r\nconst schema = Yup.object().shape({\r\n  name: Yup.string('Dado inválido').required('Campo obrigatório'),\r\n  surname: Yup.string('Dado invaálido').required('Campo obrigatório'),\r\n  email: Yup.string('Dado inválido')\r\n    .required('Campo obrigatório')\r\n    .email('Email inválido')\r\n    .test('unique', 'Email já cadastrado', async (value) => {\r\n      if (value) {\r\n        const user = await User.findOne({\r\n          where: { email: value },\r\n          attributes: ['id'],\r\n        });\r\n        return user === null;\r\n      }\r\n      return true;\r\n    }),\r\n  password: Yup.string('Dado inválido')\r\n    .required('Campo obrigatório')\r\n    .min(6, 'Campo deve ter entre 6 e 16 caracteres')\r\n    .max(16, 'Campo deve ter entre 6 e 16 caracteres'),\r\n  confirmPassword: Yup.string('Dado inválido')\r\n    .required('Campo obrigatório')\r\n    .min(6, 'Campo deve ter entre 6 e 16 caracteres')\r\n    .max(16, 'Campo deve ter entre 6 e 16 caracteres')\r\n    .oneOf([Yup.ref('password'), null], 'Senha diferentes'),\r\n});\r\n\r\nexport default schema;\r\n"]}